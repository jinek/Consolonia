# Auto-dismiss approvals ONLY when the PR diff actually changes
name: Auto-dismiss approvals on real change

on:
  pull_request:
    types: [synchronize]   # fires when new commits are pushed to the PR branch

permissions:
  pull-requests: write     # allows review dismissal
  contents: read

concurrency:
  group: pr-${{ github.event.pull_request.number }}
  cancel-in-progress: false

jobs:
  recheck:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Compute PR diff hash & fetch previous baseline
        id: diff
        shell: bash
        run: |
          set -euo pipefail
          PR=${{ github.event.pull_request.number }}
          
          # Hash current PR diff (filenames + statuses + patches). Binary files have no .patch.
          HASH=$(gh api repos/${{ github.repository }}/pulls/$PR/files --paginate \
            --jq '.[] | [ .filename, .status, (.patch // "") ] | join("\u0001")' \
            | sha256sum | cut -d" " -f1 || true)
          
          # If PR has no file diffs (e.g., draft), HASH may be empty; normalize to "none"
          if [[ -z "${HASH:-}" ]]; then HASH="none"; fi
          echo "hash=$HASH" >> "$GITHUB_OUTPUT"
          
          # Read last stored hash from any bot comment we posted before
          PREV=$(gh api repos/${{ github.repository }}/issues/$PR/comments --paginate \
            --jq '[.[] | select(.user.type=="Bot" or .user.login=="github-actions[bot]") | .body]
                  | map(capture("(?s)<!-- pr-diff-hash: (?<h>[0-9a-f]{64}|none) -->")?.h)
                  | last // empty')
          echo "prev=$PREV" >> "$GITHUB_OUTPUT"

      - name: Init baseline if first run on this PR
        if: steps.diff.outputs.prev == ''
        shell: bash
        run: |
          PR=${{ github.event.pull_request.number }}
          gh api repos/${{ github.repository }}/issues/$PR/comments \
            -f body="<!-- pr-diff-hash: ${{ steps.diff.outputs.hash }} -->"
          echo "Baseline stored; approvals kept."

      - name: Dismiss approvals if PR diff changed
        if: steps.diff.outputs.prev != '' && steps.diff.outputs.hash != steps.diff.outputs.prev
        shell: bash
        run: |
          set -euo pipefail
          PR=${{ github.event.pull_request.number }}
          
          # Dismiss all current APPROVED reviews
          gh api repos/${{ github.repository }}/pulls/$PR/reviews \
            --jq '.[] | select(.state=="APPROVED") | .id' | while read -r RID; do
              [[ -z "$RID" ]] && continue
              gh api -X PUT repos/${{ github.repository }}/pulls/$PR/reviews/$RID/dismissals \
                -f message="PR diff changed â€“ review stale"
            done
          
          # Store new hash marker
          gh api repos/${{ github.repository }}/issues/$PR/comments \
            -f body="<!-- pr-diff-hash: ${{ steps.diff.outputs.hash }} -->"

      - name: Note unchanged diff
        if: steps.diff.outputs.prev != '' && steps.diff.outputs.hash == steps.diff.outputs.prev
        shell: bash
        run: echo "PR diff unchanged; approvals kept."
