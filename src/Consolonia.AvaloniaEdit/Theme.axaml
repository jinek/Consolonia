<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:console="https://github.com/jinek/consolonia"
        xmlns:ae="clr-namespace:AvaloniaEdit;assembly=AvaloniaEdit"
        xmlns:search="clr-namespace:AvaloniaEdit.Search;assembly=AvaloniaEdit"
        xmlns:editing="clr-namespace:AvaloniaEdit.Editing;assembly=AvaloniaEdit"
        xmlns:rendering="clr-namespace:AvaloniaEdit.Rendering;assembly=AvaloniaEdit">
    <Styles.Resources>
        <ResourceDictionary>
            <Thickness x:Key="CompletionToolTipBorderThickness">0</Thickness>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Default">
                    <!-- ReSharper disable Xaml.DynamicResourceError -->
                    <DynamicResource x:Key="CompletionToolTipBackground"
                                     ResourceKey="ThemeAlternativeBackgroundBrush" />
                    <DynamicResource x:Key="CompletionToolTipForeground"
                                     ResourceKey="ThemeForegroundBrush" />
                    <DynamicResource x:Key="CompletionToolTipBorderBrush"
                                     ResourceKey="ThemeBorderBrush" />
                    <DynamicResource x:Key="OverloadViewerBackground"
                                     ResourceKey="ThemeAlternativeBackgroundBrush" />
                    <DynamicResource x:Key="OverloadViewerForeground"
                                     ResourceKey="ThemeForegroundBrush" />
                    <DynamicResource x:Key="OverloadViewerBorderBrush"
                                     ResourceKey="ThemeBorderBrush" />
                    <!-- ReSharper enable Xaml.DynamicResourceError -->
                    <SolidColorBrush x:Key="TextAreaSelectionBrush"
                                     Color="{DynamicResource ThemeSelectionBrush}" />
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>

            <ResourceDictionary.MergedDictionaries>
                <ResourceInclude Source="avares://AvaloniaEdit/Themes/Base.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>

        <ControlTheme x:Key="{x:Type ae:TextEditor}"
                      TargetType="ae:TextEditor"
                      BasedOn="{StaticResource {x:Type ae:TextEditor}}">
            <Setter Property="Background" Value="{DynamicResource ThemeBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundBrush}"/>
            
            <!-- There is a bug in AvaloniaEdit which hard codes line height to 1.35 * FontSize. To get line height of 1 we set FontSize to 0.7407407407407407 of desired size-->
            <Setter Property="FontSize"
                    Value="0.7407407407407407" />

            <!-- If AvaloniaEdit ever supports CaretBrush as an avalonia property we will do something like this:
            <Style Selector="^ /template/ editing|TextArea[OverstrikeMode=false]">
                <Setter Property="CaretBrush">
                    <console:MoveConsoleCaretToPositionBrush CaretStyle="SteadyBar"/>
                </Setter>
            </Style>
            <Style Selector="^ /template/ editing|TextArea[OverstrikeMode=true]">
                <Setter Property="CaretBrush">
                    <console:MoveConsoleCaretToPositionBrush CaretStyle="SteadyBlock"/>
                </Setter>
            </Style>
            Instead we use a bit of sleight of hand by attaching a property in the theme that
            internally goes and hooks into the caret of the TextArea and updates it.
            -->
            <Setter Property="console:Caret.UseConsole"
                    Value="True" />
            <Setter Property="LineNumbersForeground"
                    Value="{DynamicResource ThemeNoDisturbBrush}" />
        </ControlTheme>

        <ControlTheme x:Key="{x:Type editing:TextArea}"
                      TargetType="editing:TextArea"
                      BasedOn="{StaticResource {x:Type editing:TextArea}}">
            <Setter Property="SelectionBorder">
                <Pen Brush="{x:Null}" Thickness="0" />
            </Setter>
            <Setter Property="SelectionCornerRadius"
                    Value="0" />
        </ControlTheme>

        <ControlTheme x:Key="{x:Type search:SearchPanel}" TargetType="search:SearchPanel">
            <Setter Property="BorderBrush" Value="{DynamicResource ThemeBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="{DynamicResource ThemeAlternativeBackgroundBrush}"/>
            <Setter Property="Focusable" Value="True" />
            <Setter Property="Template">
                <ControlTemplate>
                    <Border Name="PART_Border" BorderThickness="0">
                        <console:BorderPanel
                                Background="{TemplateBinding Background}"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top">
                            <Grid Margin="{TemplateBinding Margin}"
                                  ColumnDefinitions="Auto Auto"
                                  RowDefinitions="Auto,Auto,Auto">
                                <ToggleButton Name="Expander"
                                              Grid.Column="0"
                                              Grid.Row="0"
                                              Width="3"
                                              Background="Transparent"
                                              Theme="{StaticResource SimpleTreeViewItemToggleButtonTheme}"
                                              IsVisible="{Binding !TextEditor.IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                                              IsChecked="{Binding IsReplaceMode, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToolTip.Tip>
                                        <TextBlock Text="{x:Static ae:SR.SearchToggleReplace}" />
                                    </ToolTip.Tip>
                                </ToggleButton>
                                <Grid Grid.Row="0"
                                      Grid.Column="1"
                                      ColumnDefinitions="20 Auto Auto Auto Auto Auto"
                                      ColumnSpacing="1">
                                    <TextBox Grid.Column="0"
                                             Name="PART_searchTextBox"
                                             MaxHeight="1"
                                             Watermark="{x:Static ae:SR.SearchLabel}"
                                             Text="{Binding SearchPattern, RelativeSource={RelativeSource TemplatedParent}}">
                                    </TextBox>
                                    <Grid Grid.Column="2"
                                          ColumnSpacing="0"
                                          ColumnDefinitions="Auto Auto Auto Auto Auto">
                                        <ToggleButton Grid.Column="0"
                                                      IsChecked="{Binding $parent[search:SearchPanel].MatchCase, Mode=TwoWay}"
                                                      ToolTip.Tip="{x:Static ae:SR.SearchMatchCaseText}"
                                                      VerticalAlignment="Center">
                                            <TextBlock Text="Aa"
                                                       VerticalAlignment="Center"
                                                       HorizontalAlignment="Center"
                                                       Foreground="{Binding $parent[ToggleButton].Foreground}"/>
                                        </ToggleButton>
                                        <ToggleButton Grid.Column="1"
                                                      IsChecked="{Binding $parent[search:SearchPanel].WholeWords, Mode=TwoWay}"
                                                      ToolTip.Tip="{x:Static ae:SR.SearchMatchWholeWordsText}"
                                                      VerticalAlignment="Center">
                                            <TextBlock Text="Word"
                                                       VerticalAlignment="Center"
                                                       HorizontalAlignment="Center"
                                                       Foreground="{Binding $parent[ToggleButton].Foreground}"/>
                                        </ToggleButton>
                                        <ToggleButton Grid.Column="2"
                                                      IsChecked="{Binding $parent[search:SearchPanel].UseRegex, Mode=TwoWay}"
                                                      ToolTip.Tip="{x:Static ae:SR.SearchUseRegexText}"
                                                      VerticalAlignment="Center">
                                            <TextBlock Text="(.*)"
                                                       VerticalAlignment="Center"
                                                       HorizontalAlignment="Center"
                                                       Foreground="{Binding $parent[ToggleButton].Foreground}"/>
                                        </ToggleButton>
                                    </Grid>

                                    <Button Grid.Column="3"
                                            VerticalAlignment="Stretch"
                                            Command="{x:Static search:SearchCommands.FindPrevious}">
                                        <ToolTip.Tip>
                                            <TextBlock Text="{x:Static ae:SR.SearchFindPreviousText}" />
                                        </ToolTip.Tip>
                                        <TextBlock Text="{StaticResource Icon_ArrowUp}"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"
                                                   Foreground="{Binding $parent[Button].Foreground}" />
                                    </Button>
                                    <Button Grid.Column="4"
                                            VerticalAlignment="Stretch"
                                            Command="{x:Static search:SearchCommands.FindNext}">
                                        <ToolTip.Tip>
                                            <TextBlock Text="{x:Static ae:SR.SearchFindNextText}" />
                                        </ToolTip.Tip>
                                        <TextBlock Text="{StaticResource Icon_ArrowDown}"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"
                                                   Foreground="{Binding $parent[Button].Foreground}" />
                                    </Button>
                                    <Button Grid.Column="5"
                                            VerticalAlignment="Stretch"
                                            Command="{x:Static search:SearchCommands.CloseSearchPanel}"
                                            Focusable="True">
                                        <TextBlock Text="{StaticResource Icon_Close}"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"
                                                   Foreground="{Binding $parent[Button].Foreground}" />
                                    </Button>
                                </Grid>
                                <Grid Name="ReplaceButtons"
                                      Grid.Row="1"
                                      Grid.Column="1"
                                      IsVisible="{Binding IsReplaceMode, RelativeSource={RelativeSource TemplatedParent}}"
                                      ColumnDefinitions="* Auto Auto"
                                      ColumnSpacing="1">
                                    <TextBox Watermark="{x:Static ae:SR.ReplaceLabel}"
                                             Name="PART_replaceTextBox"
                                             Grid.Column="0"
                                             MaxHeight="1"
                                             Text="{Binding ReplacePattern, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Button Grid.Column="1"
                                            Content="_Next"
                                            Command="{x:Static search:SearchCommands.ReplaceNext}">
                                        <ToolTip.Tip>
                                            <TextBlock Text="{x:Static ae:SR.SearchReplaceNext}" />
                                        </ToolTip.Tip>
                                    </Button>
                                    <Button Grid.Column="2"
                                            VerticalAlignment="Stretch"
                                            Content="_All"
                                            Command="{x:Static search:SearchCommands.ReplaceAll}">
                                        <ToolTip.Tip>
                                            <TextBlock Text="{x:Static ae:SR.SearchReplaceAll}" />
                                        </ToolTip.Tip>
                                    </Button>
                                </Grid>
                                <StackPanel Name="PART_MessageView"
                                            Orientation="Horizontal"
                                            Grid.Row="2"
                                            Grid.Column="0"
                                            Grid.ColumnSpan="2">
                                    <TextBlock Name="PART_MessageContent"/>
                                </StackPanel>
                            </Grid>
                        </console:BorderPanel>
                    </Border>
                </ControlTemplate>
            </Setter>
        </ControlTheme>
    </Styles.Resources>

    <!--disable border around current line-->
    <Style Selector="rendering|TextView">
        <Setter Property="CurrentLineBorder">
            <Pen Thickness="0"
                 Brush="Transparent" />
        </Setter>
    </Style>

    <!--disable border around selections--><!--
    <Style Selector="editing|TextArea">
        <Setter Property="SelectionBorder">
            <Pen Thickness="0"
                 Brush="Transparent" />
        </Setter>
        <Setter Property="SelectionCornerRadius"
                Value="0" />
    </Style>-->
</Styles>