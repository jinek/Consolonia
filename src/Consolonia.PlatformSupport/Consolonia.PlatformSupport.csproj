<Project Sdk="Microsoft.NET.Sdk">
    <Import Project="$([MSBuild]::GetPathOfFileAbove('Directory.Core.Build.props', '$(MSBuildThisFileDirectory)../'))" />
    
    <ItemGroup>
        <ProjectReference Include="..\Consolonia.Core\Consolonia.Core.csproj" />
        <ProjectReference Include="..\Consolonia.GuiCS\Consolonia.GuiCS.csproj" PrivateAssets="All"  >
            <ReferenceOutputAssembly>true</ReferenceOutputAssembly>
            <IncludeAssets>Consolonia.GuiCS.dll</IncludeAssets>
        </ProjectReference>
    </ItemGroup>

    <!-- 
    see https://josef.codes/dotnet-pack-include-referenced-projects/ for information on how 
    this is including Consolonia.GuiCS.dll as an asset and  not a package references
    -->
    <PropertyGroup>
        <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
    </PropertyGroup>

    <Target Name="CopyProjectReferencesToPackage" DependsOnTargets="BuildOnlySettings;ResolveReferences">
        <ItemGroup>
            <!-- Filter out unnecessary files -->
            <_ReferenceCopyLocalPaths Include="@(ReferenceCopyLocalPaths->WithMetadataValue('ReferenceSourceTarget', 'ProjectReference')->WithMetadataValue('PrivateAssets', 'All'))"/>
            <!-- Add file to package with consideration of sub folder. If empty, the root folder is chosen. -->
            <BuildOutputInPackage Include="@(_ReferenceCopyLocalPaths)" TargetPath="%(_ReferenceCopyLocalPaths.DestinationSubDirectory)"/>
        </ItemGroup>
    </Target>
</Project>
